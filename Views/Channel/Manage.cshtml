@model WorkLog.Models.Channel
@{
    ViewData["Title"] = "Create Channel";
    ViewData["HeaderTitle"] = "work log";

    Channel channel = ViewData["Channel"] as Channel;

    string UserEmail = Context.Session.GetString("UserEmail");
    string tenantId = Context.Session.GetString("TenantId");
}

<script>
    $(document).ready(function () {
        //if channelId = 0, you add new channel, unless, you update existing channel.
        function UpdateNewChannel(channel, channelId = 0) {
            let aObject = $('<a href="#" class="list-group-item list-group-item-action d-flex justify-content-between gap-3 py-3 channel-list" aria-current="true" data-channel-id="' + channel.id + '" data-channel-name="' + channel.name + '" data-channel-questions="' + channel.questions + '" data-channel-description="' + channel.description + '""></a>');
            aObject.append('<div><span class= "fs-5" >' + channel.name + '</span></div>');
            aObject.append('<div><button class="btn btn-outline-dark btn-sm edit-btn"><span class="bi bi-pencil"></span>Edit</button>&nbsp;<button class= "btn btn-outline-dark btn-sm remove-btn" > <span class="bi bi-trash"> </span>Remove</button> </div>');

            if (parseInt(channelId) === 0) {
                $(".channel-list-div").append(aObject);
            }

            else {
                let prev = $(".channel-list[data-channel-id='" + channel.id + "']");
                prev.before(aObject);
                prev.remove();
            }
        }
        //add member
        function addUser(channelUser) {
            if (channelUser.userEmail.split("-").length === 1)
                channelUser.userEmail = '@tenantId-' + channelUser.userEmail;

            let jObject = $('<a href="#" class="list-group-item list-group-item-action d-flex justify-content-between"><span class="fs-5">' + channelUser.userEmail.split("-")[1] + '</span><button class="btn btn-close my-1" type = "submit" > </button></a>');

            if (channelUser.state === 0)
                $("#unAcceptedUsers").append(jObject);
            else
                $("#acceptedUsers").append(jObject);

            // you can't cancel yourself
            if (channelUser.userEmail === '@UserEmail')
                jObject.find('.btn-close').remove();

            jObject.on("click", ".btn-close", function () {
                if (confirm("Do you want to remove?")) {
                    SendRequest({
                        url: "/api/ChannelAPI/cancelMember",
                        data: channelUser
                    }, function (res) {
                        if (res) {
                            alert("Successfuly Removed!");
                            jObject.remove();
                        }
                    });
                }

            });
        }

        SendRequest({
            url: "/api/ChannelAPI/getUsers",
            data: {
                channelId: @channel.Id
                }
        }, function (users) {
            $("#unAcceptedUsers").empty();
            $("#acceptedUsers").empty();
            users.forEach(function (channelUser) {
                addUser(channelUser);
            });
        });

        $("#btn-invite").on('click', function () {
            $("#channelInviteModal").attr("data-channel-id", @channel.Id);
            $("#channelInviteModal").modal('show');
        });

        $("#InviteChannelUserForm").validate({
            submitHandler: function () {
                let channelUser = {
                    channelId: @channel.Id,
                    userEmail: $("#InviteChannelUserForm input[name='Email']").val(),
                    state: 0
                };
                SendRequest({
                    url: "/api/ChannelAPI/inviteUser",
                    data: channelUser
                }, function (res) {
                    switch (res) {
                        case -4:
                            alert("User does not exist");
                            break;
                        case -3:
                            alert("Model is not valid");
                            break;
                        case -2:
                            alert("Can't invite yourself");
                            break;
                        case -1:
                            alert("ChannelId does not exist");
                            break;
                        case 0:
                            alert("Already invited");
                            break;
                        case 1:
                            $("#channelInviteModal").modal('hide');
                            addUser(channelUser);
                            break;
                    }
                });
            }
        });

        $("#btn-add-group").on('click', function () {
            $("#addGroupModal").attr("data-channel-id", @channel.Id);
            $("#addGroupModal").attr("data-group-id", 0);
            $("#addGroupModal").modal('show');
        });

        $("#group-lists").on('click', '.btn-close', function (ev) {
            ev.preventDefault();
            if (confirm("Do you want to remove?")) {
                SendRequest({
                    url: "/api/GroupAPI/removeGroup",
                    data: {
                        Id: $(this).closest('.group').attr('data-group-id')
                    }
                }, function (res) {
                    if (res) {
                        alert("Successfuly Removed!");
                        location.reload();
                        jObject.remove();
                    }
                });
            }

        });

        $(".bi-pencil").on('click', function () {
            $("#addChannelModal").attr('data-channel-id', @channel.Id);
            $("#AddChannelForm input[name='channelName']").val('@channel.Name');
            $("#AddChannelForm textarea[name='description']").val('@channel.Description');
            let questions = '@channel.Questions'.split(",#");
            questions.forEach((question, index) => {
                $("#AddChannelForm input[name='question" + (index + 1) + "']").val(question);
            });
            $("#addChannelModal").modal('show');
        });

        $(".bi-trash").on('click', function () {
            if (confirm("Do you want to remove?")) {
                SendRequest({
                    url: "/api/ChannelAPI/removeChannel",
                    data: {
                        Id: @channel.Id
                                }
                }, function () {
                    alert("Successfully removed!");
                    location.href = "/WorkLog/Premium";
                });
            }
        });

        $(".bi-link").on('click', function () {
            SendRequest({
                url: "/api/ChannelAPI/joinChannel",
                data: {
                    channelId: @channel.Id
                    }
            }, function () {
                location.href = "/WorkLog/Answer";
            })
        });

    });
</script>
<div class="container">
    <br /><br />
    <div class="py-3">
        <span class="mx-auto fs-3 d-flex flex-wrap justify-content-center" id="channel-name-span">
            @channel.Name channel
            <div>
                <button class="btn bi-link btn-outline-primary" title="Join Channel"></button>
                @if (channel.Manager_email == UserEmail)
                {
                    <button class="btn bi-pencil btn-outline-primary" title="Edit Channel"></button>
                    <button class="btn bi-trash btn-outline-primary" title="Remove Channel"></button>
                }
            </div>
        </span>

    </div>
    <div class="py-3">
        <span class="mx-auto fs-4 d-flex flex-wrap justify-content-center" id="channel-description-span">@channel.Description</span>
    </div>
    <hr>
    <div class="row py-3">
        @if (channel.Manager_email == UserEmail)
        {

            <div class="col">
                <span class="mx-auto fs-3 d-flex flex-wrap justify-content-center"><b>Members</b></span>
                <br />
                <div class="d-flex flex-wrap justify-content-center col-lg-8 col-md-10 mx-auto">
                    <div class="list-group min-width-200" id="acceptedUsers"></div>
                </div>
            </div>

            <div class="col">
                <div class="d-flex justify-content-center">
                    <span class="fs-3">
                        <b>Invitees</b>
                    </span>
                    &nbsp;
                    <button id="btn-invite"><span class="bi bi-plus"></span></button>
                </div>
                <br />
                <div class="d-flex flex-wrap justify-content-center col-lg-8 col-md-10 mx-auto">
                    <div class="list-group min-width-200" id="unAcceptedUsers"></div>
                </div>
            </div>
        }
        @if (channel.Manager_email == UserEmail)
        {
            <div class="col">
                <div class="d-flex justify-content-center">
                    <span class="fs-3">
                        <b>Groups</b>
                    </span>
                    &nbsp;

                    <button id="btn-add-group"><span class="bi bi-plus"></span></button>

                </div>
                <br />
                <div class="d-flex flex-wrap justify-content-center col-lg-8 col-md-10 mx-auto">
                    <div class="list-group min-width-200" id="group-lists">
                        @foreach (var group in ViewData["Groups"] as List<Group>)
                        {
                            <a class="list-group-item list-group-item-action d-flex justify-content-between group" data-group-id="@group.Id" href="/Group/Manage?GroupId=@group.Id">
                                <span class="fs-5">@group.Name</span>
                                @if (channel.Manager_email == UserEmail)
                                {
                                    <button class="btn btn-close my-1" type="submit"></button>
                                }
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="channelInviteModal" data-channel-id="0">
    <div class="modal-dialog" role="document">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Invite members</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5 pt-0">
                <div class="row py-3">
                    <div class="col-md-12">
                        <div class="d-flex flex-wrap justify-content-center align-items-center">
                            <form class="custom-form" id="InviteChannelUserForm">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Email</span>
                                    <input type="text" class="form-control" name="Email" required>
                                </div>
                                <div class="container d-flex flex-wrap justify-content-center">
                                    <button class="btn btn-ng btn-primary btn-zwidth" type="submit">Invite</button>
                                </div>
                                <br /><br />
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>