@using WorkLog.Repository;
@{
    Group group = ViewData["Group"] as Group;
    CommentRepository commentRepository = new CommentRepository();

    string UserEmail = Context.Session.GetString("UserEmail");
    string tenantId = Context.Session.GetString("TenantId");
}

<script>
    $(document).ready(function () {
        $("#btn-invite").on('click', function () {
            $("#grouplInviteModal").attr("data-group-id", @group.Id);
            $("#groupInviteModal").modal('show');
        });

        $("#InviteGroupUserForm").validate({
            submitHandler: function () {

                let groupUser = {
                    groupId: @group.Id,
                    userEmail: $("#InviteGroupUserForm input[name='Email']").val(),
                    state: 0
                };

                SendRequest({
                    url: "/api/GroupAPI/inviteUser",
                    data: groupUser
                }, function (res) {
                    switch (res) {
                        case -5:
                            alert("User is not a member of that channel");
                            break;
                        case -4:
                            alert("User does not exist");
                            break;
                        case -3:
                            alert("Model is not valid");
                            break;
                        case -2:
                            alert("Can't invite yourself");
                            break;
                        case -1:
                            alert("GroupId does not exist");
                            break;
                        case 0:
                            alert("Already invited");
                            break;
                        case 1:
                            $("#groupInviteModal").modal('hide');
                            location.reload();
                            break;
                    }
                });
            }
        });

        $(".bi-pencil").on('click', function () {
            $("#addGroupModal").attr('data-channel-id', @group.ChannelId);
            $("#addGroupModal").attr('data-group-id', @group.Id);
            $("#AddGroupForm input[name='groupName']").val('@group.Name');
            $("#AddGroupForm textarea[name='description']").val('@group.Description');
            $("#addGroupModal").modal('show');
        });

        $(".bi-trash").on('click', function () {
            if (confirm("Do you want to remove?")) {
                SendRequest({
                    url: "/api/GroupAPI/removeGroup",
                    data: {
                        Id: @group.Id
                            }
                }, function () {
                    alert("Successfully removed!");
                    location.href = "/WorkLog/Premium";
                });
            }
        });

        $(".group-member .btn-close").on('click', function (ev) {
            ev.preventDefault();
            if (confirm("Do you want to remove?")) {
                SendRequest({
                    url: "/api/GroupAPI/cancelMember",
                    data: {
                        Id: $(this).closest('a').attr('data-groupuser-id')
                    }
                }, function (res) {
                    if (res) {
                        alert("Successfuly Removed!");
                        location.reload();
                        jObject.remove();
                    }
                });
            }
        });
    });
</script>
<div class="container">
    <br /><br />
    <div class="py-3">
        <span class="mx-auto fs-3 d-flex flex-wrap justify-content-center" id="group-name-span">
            @group.Name group
            <div>
                @if (group.Manager_email == UserEmail)
                {
                    <button class="btn bi-pencil btn-outline-primary" title="Edit Group"></button>
                    <button class="btn bi-trash btn-outline-primary" title="Remove Group"></button>
                }
            </div>
        </span>

    </div>
    <div class="py-3">
        <span class="mx-auto fs-4 d-flex flex-wrap justify-content-center" id="channel-description-span">@group.Description</span>
    </div>
    <hr>
    <div class="row py-3">
        <div class="col">
            <span class="mx-auto fs-3 d-flex flex-wrap justify-content-center"><b>Members</b></span>
            <br />
            <div class="d-flex flex-wrap justify-content-center col-lg-8 col-md-10 mx-auto">
                <div class="list-group min-width-200" id="acceptedUsers">
                    @foreach (GroupUser groupUser in ViewData["GroupUsers"] as List<GroupUser>)
                    {
                        @if (groupUser.State == 1)
                        {
                            int count = await commentRepository.GetUnreadCommentsCount(UserEmail, groupUser.GroupId, groupUser.UserEmail);

                            <a class="group-member list-group-item list-group-item-action d-flex justify-content-between" data-groupuser-id="@groupUser.Id" href="/WorkLog/DailyInventory?UserEmail=@groupUser.UserEmail&GroupUserId=@groupUser.Id">
                                <span class="fs-5">@groupUser.UserEmail.Split("-")[1]</span>
                                @if (count > 0)
                                {
                                    <span class="badge badge-pill badge-success">@count</span>
                                }
                                @if (group.Manager_email == UserEmail && groupUser.UserEmail != UserEmail)
                                {
                                    <button class="btn btn-close my-1" type="submit"></button>
                                }
                            </a>
                        }
                    }
                </div>
            </div>
        </div>
        @if (group.Manager_email == UserEmail)
        {
            <div class="col">
                <div class="d-flex justify-content-center">
                    <span class="fs-3">
                        <b>Invitees</b>
                    </span>
                    &nbsp;
                    <button id="btn-invite"><span class="bi bi-plus"></span></button>
                </div>
                <br />
                <div class="d-flex flex-wrap justify-content-center col-lg-8 col-md-10 mx-auto">
                    <div class="list-group min-width-200" id="unAcceptedUsers">
                        @foreach (GroupUser groupUser in ViewData["GroupUsers"] as List<GroupUser>)
                        {
                            @if (groupUser.State == 0)
                            {
                                <a href="#" class="group-member list-group-item list-group-item-action d-flex justify-content-between" data-groupuser-id="@groupUser.Id">
                                    <span class="fs-5">@groupUser.UserEmail.Split("-")[1]</span>
                                    @if (group.Manager_email == UserEmail && groupUser.UserEmail != UserEmail)
                                    {
                                        <button class="btn btn-close my-1" type="submit"></button>
                                    }
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="modal fade" tabindex="-1" role="dialog" id="groupInviteModal" data-group-id="0">
    <div class="modal-dialog" role="document">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Invite members</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-5 pt-0">
                <div class="row py-3">
                    <div class="col-md-12">
                        <div class="d-flex flex-wrap justify-content-center align-items-center">
                            <form class="custom-form" id="InviteGroupUserForm">
                                <div class="input-group mb-3">
                                    <span class="input-group-text">Email</span>
                                    <input type="text" class="form-control" name="Email" required>
                                </div>
                                <div class="container d-flex flex-wrap justify-content-center">
                                    <button class="btn btn-ng btn-primary btn-zwidth" type="submit">Invite</button>
                                </div>
                                <br /><br />
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>