@model WorkLog.Models.WorkLogAnswerDTO
@{
    ViewData["Title"] = "Work Log Index Page";
    ViewData["HeaderTitle"] = "Daily Inventory";

    string UserEmail = ViewData["UserEmail"] as string;
    long GroupId = long.Parse(ViewData["GroupId"] as string);
    string Date = ViewData["Date"] as string;
    string CurrentSessionEmail = Context.Session.GetString("UserEmail");
    //List<WorkLogAnswerDTO> AnswerDTOs = ViewData["AnswerDTOS"] as List<WorkLogAnswerDTO>;
    //List<string> questions = ViewData["questions"] as List<string>;
}

<script>

    $(document).ready(async function () {

        const max_depth = 2;

        function initializeCard(res) {
            
            buildWordCloud("word_cloud", res.allAnswers, tenant_setting);
            

            $(".answer-card").empty();
            res.answers.forEach(function (answer) {
                $(".answer-card").append('<div class="card-header card-color py-3 text-primary">' +
                    'Question ' + (answer.questionId + 1) + ' : ' + res.questions[answer.questionId] +
                    '</div>');

                if (answer.questionId == 0) {
                    let jObject = $('<div class="card-body"><div class="d-flex flex-wrap justify-content-center mx-auto py-3"></div></div>');
                    if (answer.feeling == 0)
                        jObject.find('.d-flex').append('<i class="fa-light fa-face-frown-slight px-5 emoji-ng emoji-active"></i>');
                    else if (answer.feeling == 1)
                        jObject.find('.d-flex').append('<i class="fa-light fa-face-meh px-5 emoji-ng  emoji-active emoji-active"></i>');
                    else if (answer.feeling == 2)
                        jObject.find('.d-flex').append('<i class="fa-light fa-face-smile emoji-ng emoji-active emoji-active"></i>');

                    $(".answer-card").append(jObject);
                }

                else if (answer.answers.length == 1)
                    $(".answer-card").append('<div class="card-body px-3"><p class= "card-text" >' + answer.answers[0] + '</p></div>');

                else {
                    let jObject = $('<div class="card-body px-3"></div>');
                    let index = 0;
                    answer.answers.forEach(function (a) {
                        jObject.append('<p class="card-text">' + (index++ + 1) + '. ' + a + '.</p>');
                    });
                    $(".answer-card").append(jObject);
                }
            });

        }

        function loadDailyInventoryData(date) {
            SendRequest({
                url: "/api/WorkLogAPI/getDailyInventoryByDate",
                data: {
                    date,
                    userEmail: "@UserEmail"
                }
            }, function (res) {
                loadComments(date);
                initializeCard(res);
            });
        }

        function loadDate(start, count = -1) {
            SendRequest({
                url: "/api/WorkLogAPI/getDateList",
                data: {
                    start,
                    count,
                    userEmail: "@UserEmail",
                    groupId: @GroupId
                }
            }, function (res) {

                res.forEach(function (obj) {
                    $("select[name='date']").append("<option class=" + (obj.count > 0 ? "unread" : "") + " value='" + obj.date + "'>" + obj.date + (obj.count > 0 ? (" (" + obj.count + ")") : "") + "</option>");
                });
                if ("@Date" !== "-1")
                    $("select[name='date']").val(moment(new Date("@Date")).format("YYYY-MM-DD"));

                loadDailyInventoryData($("select[name='date']").val());
                loadComments($("select[name='date']").val());
                //"select[name='date']").val(res[0]);
            });
        }

        function initializeComments(comments) {

            $(".comment-body").empty();
          
            $(".comment-body").append(makeCommentForm(-1));

            comments.forEach(function (comment) {
                addComment(comment, $(".comment-body"), -1);
            });

        }

        function addComment(comment, jObject, parentId) {
            let newCommentjObject = $('<div class="comment-parent-div d-flex flex-start"></div>');
            newCommentjObject.append('<img class="rounded-circle shadow-1-strong me-3" src = "/img/avatar.png" alt = "avatar" width = "65" height = "65" /> ');
            let flex_grow_jObject = $('<div class="flex-grow-1 flex-shrink-1 sub-comment-parent-div"></div>');
            let commentDiv = $("<div></div>");

            commentDiv.append('<div class="d-flex justify-content-between align-items-center"><p class= "mb-1" ><b>' + comment.comment.from_Name.split("-")[1] + '</b> <span class= "small" > - ' + moment(new Date(comment.comment.commented_Date)).format("MM/DD/YYYY hh:mm:ss") + ' </span></p></div>');
            commentDiv.append('<p class="small mb-0">' + comment.comment.message + '</p>');

            commentDiv.append('<div><a class="reply-btn" > <i class="fas fa-reply" > </i><span class="small"> reply</span > </a></div>');

            commentDiv.on('click', '.reply-btn', function(){
                flex_grow_jObject.children(".comment-form").show();
            });

            let commentPostForm = makeCommentForm(comment.comment.id);

            flex_grow_jObject.append(commentDiv);
            flex_grow_jObject.append(commentPostForm);
            newCommentjObject.append(flex_grow_jObject);
            comment.subComments.forEach(function(subComment) {
                addComment(subComment, newCommentjObject, comment.comment.id);
            });
            
            if (parentId === -1)
                newCommentjObject.insertBefore(jObject.children('.comment-form'));

            else
                newCommentjObject.insertBefore(jObject.children('.sub-comment-parent-div').children('.comment-form'));

        }

        function makeCommentForm(parentId) {
            let commentPostForm = $('<div class="comment-form card-footer py-3 border-0" style="background-color: #f8f9fa;"></div>');
            commentPostForm.append('<div class="d-flex flex-start w-100"></div>');
            commentPostForm.children('.d-flex').append('<img class="rounded-circle shadow-1-strong me-3" src="/img/avatar.png" alt="avatar" width="40" height="40" />');
            commentPostForm.children('.d-flex').append('<textarea class="form-control" rows="4" placeholder="Please leave your comment" style = "background: #fff;" > </textarea>');
            commentPostForm.append('<div class="float-end mt-2 pt-1"><button type = "button" class= "btn btn-primary btn-sm post-btn" > Post comment </button>&nbsp;<button type = "button" class= "btn btn-outline-primary btn-sm cancel-btn"> Cancel </button></div>');

            if(parentId !== -1)
                commentPostForm.hide();

            if(parentId === -1)
                commentPostForm.find('.cancel-btn').hide();

            commentPostForm.on('click', '.post-btn', function () {

                if (commentPostForm.find('textarea').val().trim().length === 0) {
                    alert("Input Comment!");
                    return;
                }

                SendRequest({
                    url: "/api/CommentAPI/addComment",
                    data: {
                        To_Email: "@UserEmail",
                        Message: commentPostForm.find('textarea').val(),
                        Log_Date: $("select[name='date']").val(),
                        Parent_Comment_Id: parentId,
                        GroupId: @GroupId
                    }
                }, function (res) {
                    if (res !== null) {
                        alert("Commented Successfully!");
                        if (parentId !== -1)
                            commentPostForm.hide();

                        addComment({
                            comment: res,
                            subComments: []
                        }, commentPostForm.closest(parentId === -1 ? ".comment-body" : ".comment-parent-div"), parentId);

                    }
                })
            });

            commentPostForm.on('click', '.cancel-btn', function () {
                if (parentId !== -1)
                    commentPostForm.hide();
            });

            return commentPostForm;
        }

        function loadComments(date) {
            SendRequest({
                url: "/api/CommentAPI/getComments",
                data: {
                    to_email: "@UserEmail",
                    log_date: date,
                    groupId: @GroupId
                }
            }, function (res) {
                initializeComments(res);
            })
        }

        $("select[name='date']").on('change', function () {

            if ($(this).val() !== "-1") {
                loadDailyInventoryData($(this).val());
                //loadComments($(this).val());
            }

        });

        $(".btn-show-comments").on('click', function(){
            let logDate = $("select[name='date']").val();
            if ($("option[value='" + logDate + "']").hasClass("unread"))
            {
                SendRequest({
                    url: "/api/CommentAPI/readComment",
                    data: {
                        groupId: @GroupId,
                        logDate: logDate,
                        to_email: "@UserEmail"
                    }
                }, function(res){
                    if(res)
                    {
                        $("option[value='" + logDate + "']").removeClass("unread");
                        $("option[value='" + logDate + "']").text(logDate);
                    }
                });
            }
            
        });

        loadDate(0);

    });
</script>

<div class="row">
    <div class="mb-3">
        <div class="d-flex justify-content-center">
            <span class="fs-5 mt-3">@UserEmail.Split("-")[1] - Date :&nbsp;&nbsp;</span>
            <div class="mb-0 mt-3">
                <select class="form-select dropdown-toggle" name="date">
                </select>
                @*<input class="form-control search-bg" type="date" name="date">*@
            </div>
        </div>
        <hr>
    </div>
    <div class="col-md-7 py-5">
        <div class="answer-card card">
        </div>
    </div>
    <div class="col-md-1"></div>
    <div class="col-md-4 py-5">
        <div class="flex-grid align-item-center justify-content-center mx-auto">
            <div id="word_cloud" class="word-cloud"></div>
        </div>
    </div>
    @if (GroupId != -1)
    {

        <div>
            <nav class="navbar bg-body-tertiary adjust-nav-height fixed-left-top">
                <div class="container-fluid">
                    <a class="navbar-brand" href="#"></a>
                    <button class="btn btn-primary btn-show-comments" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar" aria-controls="offcanvasNavbar">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">
                            <path d="M2.678 11.894a1 1 0 0 1 .287.801 10.97 10.97 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8.06 8.06 0 0 0 8 14c3.996 0 7-2.807 7-6 0-3.192-3.004-6-7-6S1 4.808 1 8c0 1.468.617 2.83 1.678 3.894zm-.493 3.905a21.682 21.682 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a9.68 9.68 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9.06 9.06 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105z"></path>
                        </svg>
                    </button>
                    <div class="adjust-nav-height offcanvas offcanvas-end nav-width gradient-custom" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                        <div class="offcanvas-header">
                            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                            <h5 class="offcanvas-title" id="offcanvasNavbarLabel"></h5>
                        </div>
                        <div class="offcanvas-body">
                            <div class="container">
                                <div class="row d-flex justify-content-center">
                                    <div class="col-md-12">
                                        <div class="card">
                                            <div class="comment-body card-body p-4 comment-parent-div">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </nav>
        </div>
    }
</div>